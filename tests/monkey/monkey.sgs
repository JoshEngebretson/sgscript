
include_library( "string" );
include_library( "io" );

global tokens = io_file_read( "monkey_dict.txt" );
tokens = string_trim( string_replace( tokens, ["\n","  ","  ","  "," "], " " ) );
tokens = string_explode( tokens, " " );

function advance( cur )
{
	i = cur.size - 1;
	while( i >= 0 )
	{
		cur[ i ]++;
		if( cur[ i ] >= tokens.size )
		{
			cur[ i ] = 0;
			i--;
		}
		else
			break;
	}
	if( i == -1 )
		cur.push( 0 );
}

function produce( cur, sep )
{
	out = [];
	foreach( n : cur )
		out.push( tokens[ n ] );
	return string_implode( out, sep );
}

cur = [];
if( io_file_exists( "monkey_state.txt" ) )
{
	str = string_trim( io_file_read( "monkey_state.txt" ) );
	cur = string_explode( str, ',' );
	foreach( k,v : cur )
		cur[k] = 0+v;
}

sys_replevel( SGS_ERROR + 1 );

ctr = 0;
while( true )
{
	if( ctr++ % 1000 == 0 )
		io_file_write( "monkey_state.txt", string_implode(cur,",")$"\n" );
	advance( cur );
	str = produce( cur, " " );
//	println( "||| " $ str $ " |||" );
	eval( str, true );
	str = produce( cur, "" );
//	println( "||| " $ str $ " |||" );
	eval( str, true );
}
